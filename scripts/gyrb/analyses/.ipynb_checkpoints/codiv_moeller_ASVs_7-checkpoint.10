{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['.DS_Store',\n",
       " 'ASVs_filtered.fasta',\n",
       " 'ASVs_filtered_counts.tsv',\n",
       " 'ASVs_filtered_ref_amp.tree',\n",
       " 'ASVs_filtered_ref_full.tree',\n",
       " 'ASVs_taxonomy.txt',\n",
       " 'codiv_Bacteroidaceae.fna',\n",
       " 'metadata_gyrb_amp_meta_passing_samples.txt',\n",
       " 'ref_gyrb_gtdbtk',\n",
       " 'test.tre']"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import os\n",
    "import pandas as pd\n",
    "from ete3 import Tree\n",
    "from collections import Counter\n",
    "\n",
    "#from Bio import SeqIO\n",
    "#from Bio import Seq\n",
    "\n",
    "os.getcwd()\n",
    "os.chdir('/Volumes/AHN/captive_ape_microbiome/results/gyrb/')\n",
    "\n",
    "os.listdir('inputs/')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "#inputs\n",
    "metadata_file = 'inputs/metadata_gyrb_amp_meta_passing_samples.txt'\n",
    "tax_table_file = 'inputs/ASVs_taxonomy.txt'\n",
    "asv_table_file = 'inputs/ASVs_filtered_counts.tsv'\n",
    "asv_fasta_file = 'inputs/ASVs_filtered.fasta'\n",
    "tree_file = 'inputs/ASVs_filtered_ref_full.tree'\n",
    "moeller_codiv_fasta = 'inputs/codiv_Bacteroidaceae.fna'\n",
    "pident_cutoff = 95"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "#outputs for each codiv lineage\n",
    "#tables with ASVs and assigned HR clade\n",
    "#subtree "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Blastn moeller co-div seqs against ASVs and filter ASVs matchin X% identity"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "mkdir: analyses/codiv_moeller_ASVs: File exists\n"
     ]
    }
   ],
   "source": [
    "%%bash\n",
    "mkdir analyses/codiv_moeller_ASVs\n",
    "cp inputs/codiv_Bacteroidaceae.fna analyses/codiv_moeller_ASVs/codiv_Bacteroidaceae.fna"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "\n",
      "Building a new DB, current time: 07/09/2020 12:42:55\n",
      "New DB name:   /Volumes/AHN/captive_ape_microbiome/results/gyrb/analyses/codiv_moeller_ASVs/codiv_Bacteroidaceae.fna\n",
      "New DB title:  analyses/codiv_moeller_ASVs/codiv_Bacteroidaceae.fna\n",
      "Sequence type: Nucleotide\n",
      "Deleted existing Nucleotide BLAST database named /Volumes/AHN/captive_ape_microbiome/results/gyrb/analyses/codiv_moeller_ASVs/codiv_Bacteroidaceae.fna\n",
      "Keep MBits: T\n",
      "Maximum file size: 1000000000B\n",
      "Adding sequences from FASTA; added 208 sequences in 0.00550508 seconds.\n"
     ]
    }
   ],
   "source": [
    "%%bash\n",
    "#make blastdb\n",
    "makeblastdb -in analyses/codiv_moeller_ASVs/codiv_Bacteroidaceae.fna -dbtype nucl\n",
    "\n",
    "#blast moeller co-div seqs\n",
    "blastn -query inputs/ASVs_filtered.fasta -db analyses/codiv_moeller_ASVs/codiv_Bacteroidaceae.fna \\\n",
    "-outfmt \"7 qseqid salltitles sseqid pident length qlen evalue\" \\\n",
    "-out analyses/codiv_moeller_ASVs/ASVs_filtered_blastout.txt \\\n",
    "-max_target_seqs 5"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "     ASV                codiv_clade_seq        sseqid  pident  length  qlen  \\\n",
      "0  ASV_1  Human6700665 Bt3_clade1_human  Human6700665   100.0     250   250   \n",
      "1  ASV_1   Human663977 Bt3_clade1_human   Human663977   100.0     250   250   \n",
      "2  ASV_1   Human663970 Bt3_clade1_human   Human663970   100.0     250   250   \n",
      "3  ASV_1  Human5838232 Bt3_clade1_human  Human5838232   100.0     250   250   \n",
      "4  ASV_1  Human5110045 Bt3_clade1_human  Human5110045   100.0     250   250   \n",
      "\n",
      "          evalue  \n",
      "0  6.220000e-133  \n",
      "1  6.220000e-133  \n",
      "2  6.220000e-133  \n",
      "3  6.220000e-133  \n",
      "4  6.220000e-133  \n",
      "316 ASVs matching co-div clades with greater than 95 percent identity\n"
     ]
    }
   ],
   "source": [
    "#filter output to find \n",
    "blast_res = pd.read_csv('analyses/codiv_moeller_ASVs/ASVs_filtered_blastout.txt',sep='\\t',comment='#',header=None)\n",
    "blast_res.columns = ['ASV','codiv_clade_seq','sseqid','pident','length','qlen','evalue']\n",
    "print(blast_res.head())\n",
    "blast_res = blast_res.groupby('ASV').head(1).reset_index(drop=True)\n",
    "blast_res_pass = blast_res[blast_res['pident']>pident_cutoff].reset_index(drop=True)\n",
    "print(len(blast_res_pass),'ASVs matching co-div clades with greater than',pident_cutoff,'percent identity')\n",
    "codiv_ASVs = list(blast_res_pass['ASV'])\n",
    "blast_res_pass['codiv_clade'] = blast_res_pass['codiv_clade_seq'].apply(lambda x: x.split(' ')[1])\n",
    "blast_res_pass['lineage'] = blast_res_pass['codiv_clade'].apply(lambda x: x.split('_')[0]) \n",
    "blast_res_pass = blast_res_pass[['ASV', 'lineage', 'codiv_clade', 'codiv_clade_seq', 'sseqid', 'pident', 'length', 'qlen', 'evalue']]\n",
    "blast_res_pass.to_csv('analyses/codiv_moeller_ASVs/ASVs_filtered_blastout_passing.txt',sep='\\t')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Subset the matching ASVs "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_lineage_ASVs(tree_file,listASVs):\n",
    "    tree = Tree(tree_file, format=0)\n",
    "    #makes sure we don't miss any ASVs that didn't match in the blast search \n",
    "    #but are descended from the MRCA of those that did\n",
    "    lineage_MRCA = tree.get_common_ancestor(listASVs)\n",
    "    lineageASVs = [x.name for x in lineage_MRCA.get_leaves()] \n",
    "    print(len(listASVs), 'ASVs identified in blast search but', len(lineageASVs), 'ASVs are within the monophyletic clade')\n",
    "    return(lineageASVs)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "41 ASVs identified in blast search but 41 ASVs are within the monophyletic clade\n",
      "156 ASVs identified in blast search but 360 ASVs are within the monophyletic clade\n",
      "119 ASVs identified in blast search but 7995 ASVs are within the monophyletic clade\n",
      "33 ASVs identified in blast search but 7995 ASVs are within the monophyletic clade\n"
     ]
    }
   ],
   "source": [
    "Bt1_blasthits_table = blast_res_pass[blast_res_pass['codiv_clade_seq'].apply(lambda x: 'Bt1' in x)]\n",
    "Bt1_blasthits_ASVs = list(Bt1_blasthits_table['ASV'])\n",
    "Bt1_lineage_ASVs = get_lineage_ASVs(\"inputs/ASVs_filtered_ref_full.tree\",Bt1_blasthits_ASVs)\n",
    "Bt1_lineage_ASVs = pd.DataFrame(Bt1_lineage_ASVs,columns=['ASV'])\n",
    "Bt1_lineage_ASVs = Bt1_lineage_ASVs.merge(blast_res_pass,on='ASV',how='left')\n",
    "\n",
    "Bt2_blasthits_table = blast_res_pass[blast_res_pass['codiv_clade_seq'].apply(lambda x: 'Bt2' in x)]\n",
    "Bt2_blasthits_ASVs = list(Bt2_blasthits_table['ASV'])\n",
    "Bt2_lineage_ASVs = get_lineage_ASVs(\"inputs/ASVs_filtered_ref_full.tree\",Bt2_blasthits_ASVs)\n",
    "Bt2_lineage_ASVs = pd.DataFrame(Bt2_lineage_ASVs,columns=['ASV'])\n",
    "Bt2_lineage_ASVs = Bt2_lineage_ASVs.merge(blast_res_pass,on='ASV',how='left')\n",
    "\n",
    "Bt3_blasthits_table = blast_res_pass[blast_res_pass['codiv_clade_seq'].apply(lambda x: 'Bt3' in x)]\n",
    "Bt3_blasthits_ASVs = list(Bt3_blasthits_table['ASV'])\n",
    "Bt3_lineage_ASVs = get_lineage_ASVs(\"inputs/ASVs_filtered_ref_full.tree\",Bt3_blasthits_ASVs)\n",
    "Bt3_lineage_ASVs = pd.DataFrame(Bt2_lineage_ASVs,columns=['ASV'])\n",
    "Bt3_lineage_ASVs = Bt3_lineage_ASVs.merge(blast_res_pass,on='ASV',how='left')\n",
    "\n",
    "#does subseting to just bonobo and chimp clades reduce the size of the mcra tree\n",
    "Bt3_chimp = Bt3_blasthits_table[Bt3_blasthits_table['codiv_clade']=='Bt3_clade1_chimp']\n",
    "Bt3_bon = Bt3_blasthits_table[Bt3_blasthits_table['codiv_clade']=='Bt3_clade1_bonobo']\n",
    "Bt3_bon_chimp = pd.concat([Bt3_chimp,Bt3_bon])\n",
    "Bt3_bon_chimp_ASVs = list(Bt3_bon_chimp['ASV'])\n",
    "Bt3_bc_ASVs = get_lineage_ASVs(\"inputs/ASVs_filtered_ref_full.tree\",Bt3_bon_chimp_ASVs)\n",
    "Bt3_bc_ASVs = pd.DataFrame(Bt3_bc_ASVs,columns=['ASV'])\n",
    "Bt3_bc_ASVs = Bt3_bc_ASVs.merge(blast_res_pass,on='ASV',how='left')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ASV</th>\n",
       "      <th>lineage</th>\n",
       "      <th>codiv_clade</th>\n",
       "      <th>codiv_clade_seq</th>\n",
       "      <th>sseqid</th>\n",
       "      <th>pident</th>\n",
       "      <th>length</th>\n",
       "      <th>qlen</th>\n",
       "      <th>evalue</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>ASV_4444</td>\n",
       "      <td>Bt1</td>\n",
       "      <td>Bt1_clade1_gorilla</td>\n",
       "      <td>Gorilla3748318 Bt1_clade1_gorilla</td>\n",
       "      <td>Gorilla3748318</td>\n",
       "      <td>100.0</td>\n",
       "      <td>250</td>\n",
       "      <td>250</td>\n",
       "      <td>6.220000e-133</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>ASV_1277</td>\n",
       "      <td>Bt1</td>\n",
       "      <td>Bt1_clade1_gorilla</td>\n",
       "      <td>Gorilla8497213 Bt1_clade1_gorilla</td>\n",
       "      <td>Gorilla8497213</td>\n",
       "      <td>100.0</td>\n",
       "      <td>250</td>\n",
       "      <td>250</td>\n",
       "      <td>6.220000e-133</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>ASV_6056</td>\n",
       "      <td>Bt1</td>\n",
       "      <td>Bt1_clade1_gorilla</td>\n",
       "      <td>Gorilla8497213 Bt1_clade1_gorilla</td>\n",
       "      <td>Gorilla8497213</td>\n",
       "      <td>99.6</td>\n",
       "      <td>250</td>\n",
       "      <td>250</td>\n",
       "      <td>2.890000e-131</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>ASV_6020</td>\n",
       "      <td>Bt1</td>\n",
       "      <td>Bt1_clade1_gorilla</td>\n",
       "      <td>Gorilla8497213 Bt1_clade1_gorilla</td>\n",
       "      <td>Gorilla8497213</td>\n",
       "      <td>99.6</td>\n",
       "      <td>250</td>\n",
       "      <td>250</td>\n",
       "      <td>2.890000e-131</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>ASV_481</td>\n",
       "      <td>Bt1</td>\n",
       "      <td>Bt1_clade1_gorilla</td>\n",
       "      <td>Gorilla9805772 Bt1_clade1_gorilla</td>\n",
       "      <td>Gorilla9805772</td>\n",
       "      <td>100.0</td>\n",
       "      <td>250</td>\n",
       "      <td>250</td>\n",
       "      <td>6.220000e-133</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>ASV_2189</td>\n",
       "      <td>Bt1</td>\n",
       "      <td>Bt1_clade1_gorilla</td>\n",
       "      <td>Gorilla9805772 Bt1_clade1_gorilla</td>\n",
       "      <td>Gorilla9805772</td>\n",
       "      <td>100.0</td>\n",
       "      <td>249</td>\n",
       "      <td>250</td>\n",
       "      <td>2.240000e-132</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>ASV_4159</td>\n",
       "      <td>Bt1</td>\n",
       "      <td>Bt1_clade1_gorilla</td>\n",
       "      <td>Gorilla9805772 Bt1_clade1_gorilla</td>\n",
       "      <td>Gorilla9805772</td>\n",
       "      <td>99.6</td>\n",
       "      <td>250</td>\n",
       "      <td>250</td>\n",
       "      <td>2.890000e-131</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>ASV_3542</td>\n",
       "      <td>Bt1</td>\n",
       "      <td>Bt1_clade1_gorilla</td>\n",
       "      <td>Gorilla9805772 Bt1_clade1_gorilla</td>\n",
       "      <td>Gorilla9805772</td>\n",
       "      <td>99.6</td>\n",
       "      <td>250</td>\n",
       "      <td>250</td>\n",
       "      <td>2.890000e-131</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>ASV_4310</td>\n",
       "      <td>Bt1</td>\n",
       "      <td>Bt1_clade1_gorilla</td>\n",
       "      <td>Gorilla9805772 Bt1_clade1_gorilla</td>\n",
       "      <td>Gorilla9805772</td>\n",
       "      <td>99.2</td>\n",
       "      <td>250</td>\n",
       "      <td>250</td>\n",
       "      <td>1.350000e-129</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>ASV_1625</td>\n",
       "      <td>Bt1</td>\n",
       "      <td>Bt1_clade1_gorilla</td>\n",
       "      <td>Gorilla9805772 Bt1_clade1_gorilla</td>\n",
       "      <td>Gorilla9805772</td>\n",
       "      <td>99.6</td>\n",
       "      <td>250</td>\n",
       "      <td>250</td>\n",
       "      <td>2.890000e-131</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>ASV_1090</td>\n",
       "      <td>Bt1</td>\n",
       "      <td>Bt1_clade1_chimp</td>\n",
       "      <td>Chimp5888147 Bt1_clade1_chimp</td>\n",
       "      <td>Chimp5888147</td>\n",
       "      <td>98.4</td>\n",
       "      <td>250</td>\n",
       "      <td>250</td>\n",
       "      <td>2.910000e-126</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>ASV_2134</td>\n",
       "      <td>Bt1</td>\n",
       "      <td>Bt1_clade1_chimp</td>\n",
       "      <td>Chimp5888147 Bt1_clade1_chimp</td>\n",
       "      <td>Chimp5888147</td>\n",
       "      <td>99.2</td>\n",
       "      <td>250</td>\n",
       "      <td>250</td>\n",
       "      <td>1.350000e-129</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>ASV_482</td>\n",
       "      <td>Bt1</td>\n",
       "      <td>Bt1_clade1_chimp</td>\n",
       "      <td>Chimp6685161 Bt1_clade1_chimp</td>\n",
       "      <td>Chimp6685161</td>\n",
       "      <td>98.8</td>\n",
       "      <td>250</td>\n",
       "      <td>250</td>\n",
       "      <td>6.260000e-128</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>ASV_5974</td>\n",
       "      <td>Bt1</td>\n",
       "      <td>Bt1_clade1_chimp</td>\n",
       "      <td>Chimp6685161 Bt1_clade1_chimp</td>\n",
       "      <td>Chimp6685161</td>\n",
       "      <td>98.4</td>\n",
       "      <td>250</td>\n",
       "      <td>250</td>\n",
       "      <td>2.910000e-126</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>ASV_647</td>\n",
       "      <td>Bt1</td>\n",
       "      <td>Bt1_clade1_chimp</td>\n",
       "      <td>Chimp6685161 Bt1_clade1_chimp</td>\n",
       "      <td>Chimp6685161</td>\n",
       "      <td>100.0</td>\n",
       "      <td>250</td>\n",
       "      <td>250</td>\n",
       "      <td>6.220000e-133</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>ASV_711</td>\n",
       "      <td>Bt1</td>\n",
       "      <td>Bt1_clade1_chimp</td>\n",
       "      <td>Chimp5888147 Bt1_clade1_chimp</td>\n",
       "      <td>Chimp5888147</td>\n",
       "      <td>100.0</td>\n",
       "      <td>250</td>\n",
       "      <td>250</td>\n",
       "      <td>6.220000e-133</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>ASV_915</td>\n",
       "      <td>Bt1</td>\n",
       "      <td>Bt1_clade1_chimp</td>\n",
       "      <td>Chimp8740623 Bt1_clade1_chimp</td>\n",
       "      <td>Chimp8740623</td>\n",
       "      <td>100.0</td>\n",
       "      <td>250</td>\n",
       "      <td>250</td>\n",
       "      <td>6.220000e-133</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>ASV_2183</td>\n",
       "      <td>Bt1</td>\n",
       "      <td>Bt1_clade1_chimp</td>\n",
       "      <td>Chimp6685161 Bt1_clade1_chimp</td>\n",
       "      <td>Chimp6685161</td>\n",
       "      <td>98.4</td>\n",
       "      <td>250</td>\n",
       "      <td>250</td>\n",
       "      <td>2.910000e-126</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>ASV_4623</td>\n",
       "      <td>Bt1</td>\n",
       "      <td>Bt1_clade1_bonobo</td>\n",
       "      <td>Bonobo4186256 Bt1_clade1_bonobo</td>\n",
       "      <td>Bonobo4186256</td>\n",
       "      <td>99.2</td>\n",
       "      <td>250</td>\n",
       "      <td>250</td>\n",
       "      <td>1.350000e-129</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>ASV_1643</td>\n",
       "      <td>Bt1</td>\n",
       "      <td>Bt1_clade1_bonobo</td>\n",
       "      <td>Bonobo4186256 Bt1_clade1_bonobo</td>\n",
       "      <td>Bonobo4186256</td>\n",
       "      <td>99.6</td>\n",
       "      <td>250</td>\n",
       "      <td>250</td>\n",
       "      <td>2.890000e-131</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>ASV_1616</td>\n",
       "      <td>Bt1</td>\n",
       "      <td>Bt1_clade1_bonobo</td>\n",
       "      <td>Bonobo11821974 Bt1_clade1_bonobo</td>\n",
       "      <td>Bonobo11821974</td>\n",
       "      <td>99.6</td>\n",
       "      <td>250</td>\n",
       "      <td>250</td>\n",
       "      <td>2.890000e-131</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>ASV_4160</td>\n",
       "      <td>Bt1</td>\n",
       "      <td>Bt1_clade1_bonobo</td>\n",
       "      <td>Bonobo11821974 Bt1_clade1_bonobo</td>\n",
       "      <td>Bonobo11821974</td>\n",
       "      <td>99.6</td>\n",
       "      <td>250</td>\n",
       "      <td>250</td>\n",
       "      <td>2.890000e-131</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>ASV_4172</td>\n",
       "      <td>Bt1</td>\n",
       "      <td>Bt1_clade1_bonobo</td>\n",
       "      <td>Bonobo4186256 Bt1_clade1_bonobo</td>\n",
       "      <td>Bonobo4186256</td>\n",
       "      <td>99.6</td>\n",
       "      <td>250</td>\n",
       "      <td>250</td>\n",
       "      <td>2.890000e-131</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>ASV_5947</td>\n",
       "      <td>Bt1</td>\n",
       "      <td>Bt1_clade1_bonobo</td>\n",
       "      <td>Bonobo11821974 Bt1_clade1_bonobo</td>\n",
       "      <td>Bonobo11821974</td>\n",
       "      <td>98.0</td>\n",
       "      <td>250</td>\n",
       "      <td>250</td>\n",
       "      <td>1.350000e-124</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>ASV_1279</td>\n",
       "      <td>Bt1</td>\n",
       "      <td>Bt1_clade1_bonobo</td>\n",
       "      <td>Bonobo4186256 Bt1_clade1_bonobo</td>\n",
       "      <td>Bonobo4186256</td>\n",
       "      <td>100.0</td>\n",
       "      <td>250</td>\n",
       "      <td>250</td>\n",
       "      <td>6.220000e-133</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>ASV_1619</td>\n",
       "      <td>Bt1</td>\n",
       "      <td>Bt1_clade1_bonobo</td>\n",
       "      <td>Bonobo3311273 Bt1_clade1_bonobo</td>\n",
       "      <td>Bonobo3311273</td>\n",
       "      <td>99.6</td>\n",
       "      <td>250</td>\n",
       "      <td>250</td>\n",
       "      <td>2.890000e-131</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>ASV_4847</td>\n",
       "      <td>Bt1</td>\n",
       "      <td>Bt1_clade1_bonobo</td>\n",
       "      <td>Bonobo8827876 Bt1_clade1_bonobo</td>\n",
       "      <td>Bonobo8827876</td>\n",
       "      <td>99.6</td>\n",
       "      <td>250</td>\n",
       "      <td>250</td>\n",
       "      <td>2.890000e-131</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>ASV_905</td>\n",
       "      <td>Bt1</td>\n",
       "      <td>Bt1_clade1_bonobo</td>\n",
       "      <td>Bonobo8827876 Bt1_clade1_bonobo</td>\n",
       "      <td>Bonobo8827876</td>\n",
       "      <td>100.0</td>\n",
       "      <td>250</td>\n",
       "      <td>250</td>\n",
       "      <td>6.220000e-133</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>ASV_4859</td>\n",
       "      <td>Bt1</td>\n",
       "      <td>Bt1_clade1_bonobo</td>\n",
       "      <td>Bonobo8827876 Bt1_clade1_bonobo</td>\n",
       "      <td>Bonobo8827876</td>\n",
       "      <td>99.6</td>\n",
       "      <td>250</td>\n",
       "      <td>250</td>\n",
       "      <td>2.890000e-131</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>ASV_1596</td>\n",
       "      <td>Bt1</td>\n",
       "      <td>Bt1_clade1_bonobo</td>\n",
       "      <td>Bonobo8827876 Bt1_clade1_bonobo</td>\n",
       "      <td>Bonobo8827876</td>\n",
       "      <td>99.6</td>\n",
       "      <td>250</td>\n",
       "      <td>250</td>\n",
       "      <td>2.890000e-131</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>ASV_2216</td>\n",
       "      <td>Bt1</td>\n",
       "      <td>Bt1_clade1_bonobo</td>\n",
       "      <td>Bonobo8827876 Bt1_clade1_bonobo</td>\n",
       "      <td>Bonobo8827876</td>\n",
       "      <td>99.2</td>\n",
       "      <td>250</td>\n",
       "      <td>250</td>\n",
       "      <td>1.350000e-129</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>ASV_513</td>\n",
       "      <td>Bt1</td>\n",
       "      <td>Bt1_clade1_bonobo</td>\n",
       "      <td>Bonobo3311273 Bt1_clade1_bonobo</td>\n",
       "      <td>Bonobo3311273</td>\n",
       "      <td>100.0</td>\n",
       "      <td>250</td>\n",
       "      <td>250</td>\n",
       "      <td>6.220000e-133</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>ASV_4475</td>\n",
       "      <td>Bt1</td>\n",
       "      <td>Bt1_clade1_bonobo</td>\n",
       "      <td>Bonobo3311273 Bt1_clade1_bonobo</td>\n",
       "      <td>Bonobo3311273</td>\n",
       "      <td>99.6</td>\n",
       "      <td>250</td>\n",
       "      <td>250</td>\n",
       "      <td>2.890000e-131</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>ASV_2163</td>\n",
       "      <td>Bt1</td>\n",
       "      <td>Bt1_clade1_bonobo</td>\n",
       "      <td>Bonobo3311273 Bt1_clade1_bonobo</td>\n",
       "      <td>Bonobo3311273</td>\n",
       "      <td>99.6</td>\n",
       "      <td>250</td>\n",
       "      <td>250</td>\n",
       "      <td>2.890000e-131</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>ASV_598</td>\n",
       "      <td>Bt1</td>\n",
       "      <td>Bt1_clade1_bonobo</td>\n",
       "      <td>Bonobo11821974 Bt1_clade1_bonobo</td>\n",
       "      <td>Bonobo11821974</td>\n",
       "      <td>100.0</td>\n",
       "      <td>250</td>\n",
       "      <td>250</td>\n",
       "      <td>6.220000e-133</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>ASV_4758</td>\n",
       "      <td>Bt1</td>\n",
       "      <td>Bt1_clade1_bonobo</td>\n",
       "      <td>Bonobo11821974 Bt1_clade1_bonobo</td>\n",
       "      <td>Bonobo11821974</td>\n",
       "      <td>99.6</td>\n",
       "      <td>250</td>\n",
       "      <td>250</td>\n",
       "      <td>2.890000e-131</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>ASV_4252</td>\n",
       "      <td>Bt1</td>\n",
       "      <td>Bt1_clade1_bonobo</td>\n",
       "      <td>Bonobo11821974 Bt1_clade1_bonobo</td>\n",
       "      <td>Bonobo11821974</td>\n",
       "      <td>99.6</td>\n",
       "      <td>250</td>\n",
       "      <td>250</td>\n",
       "      <td>2.890000e-131</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>ASV_4727</td>\n",
       "      <td>Bt1</td>\n",
       "      <td>Bt1_clade1_bonobo</td>\n",
       "      <td>Bonobo11821974 Bt1_clade1_bonobo</td>\n",
       "      <td>Bonobo11821974</td>\n",
       "      <td>99.2</td>\n",
       "      <td>250</td>\n",
       "      <td>250</td>\n",
       "      <td>1.350000e-129</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>ASV_2133</td>\n",
       "      <td>Bt1</td>\n",
       "      <td>Bt1_clade1_bonobo</td>\n",
       "      <td>Bonobo3311273 Bt1_clade1_bonobo</td>\n",
       "      <td>Bonobo3311273</td>\n",
       "      <td>99.6</td>\n",
       "      <td>250</td>\n",
       "      <td>250</td>\n",
       "      <td>2.890000e-131</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>ASV_1586</td>\n",
       "      <td>Bt1</td>\n",
       "      <td>Bt1_clade1_bonobo</td>\n",
       "      <td>Bonobo3311273 Bt1_clade1_bonobo</td>\n",
       "      <td>Bonobo3311273</td>\n",
       "      <td>99.2</td>\n",
       "      <td>250</td>\n",
       "      <td>250</td>\n",
       "      <td>1.350000e-129</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40</th>\n",
       "      <td>ASV_4865</td>\n",
       "      <td>Bt1</td>\n",
       "      <td>Bt1_clade1_bonobo</td>\n",
       "      <td>Bonobo3311273 Bt1_clade1_bonobo</td>\n",
       "      <td>Bonobo3311273</td>\n",
       "      <td>98.4</td>\n",
       "      <td>250</td>\n",
       "      <td>250</td>\n",
       "      <td>2.910000e-126</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         ASV lineage         codiv_clade                    codiv_clade_seq  \\\n",
       "0   ASV_4444     Bt1  Bt1_clade1_gorilla  Gorilla3748318 Bt1_clade1_gorilla   \n",
       "1   ASV_1277     Bt1  Bt1_clade1_gorilla  Gorilla8497213 Bt1_clade1_gorilla   \n",
       "2   ASV_6056     Bt1  Bt1_clade1_gorilla  Gorilla8497213 Bt1_clade1_gorilla   \n",
       "3   ASV_6020     Bt1  Bt1_clade1_gorilla  Gorilla8497213 Bt1_clade1_gorilla   \n",
       "4    ASV_481     Bt1  Bt1_clade1_gorilla  Gorilla9805772 Bt1_clade1_gorilla   \n",
       "5   ASV_2189     Bt1  Bt1_clade1_gorilla  Gorilla9805772 Bt1_clade1_gorilla   \n",
       "6   ASV_4159     Bt1  Bt1_clade1_gorilla  Gorilla9805772 Bt1_clade1_gorilla   \n",
       "7   ASV_3542     Bt1  Bt1_clade1_gorilla  Gorilla9805772 Bt1_clade1_gorilla   \n",
       "8   ASV_4310     Bt1  Bt1_clade1_gorilla  Gorilla9805772 Bt1_clade1_gorilla   \n",
       "9   ASV_1625     Bt1  Bt1_clade1_gorilla  Gorilla9805772 Bt1_clade1_gorilla   \n",
       "10  ASV_1090     Bt1    Bt1_clade1_chimp      Chimp5888147 Bt1_clade1_chimp   \n",
       "11  ASV_2134     Bt1    Bt1_clade1_chimp      Chimp5888147 Bt1_clade1_chimp   \n",
       "12   ASV_482     Bt1    Bt1_clade1_chimp      Chimp6685161 Bt1_clade1_chimp   \n",
       "13  ASV_5974     Bt1    Bt1_clade1_chimp      Chimp6685161 Bt1_clade1_chimp   \n",
       "14   ASV_647     Bt1    Bt1_clade1_chimp      Chimp6685161 Bt1_clade1_chimp   \n",
       "15   ASV_711     Bt1    Bt1_clade1_chimp      Chimp5888147 Bt1_clade1_chimp   \n",
       "16   ASV_915     Bt1    Bt1_clade1_chimp      Chimp8740623 Bt1_clade1_chimp   \n",
       "17  ASV_2183     Bt1    Bt1_clade1_chimp      Chimp6685161 Bt1_clade1_chimp   \n",
       "18  ASV_4623     Bt1   Bt1_clade1_bonobo    Bonobo4186256 Bt1_clade1_bonobo   \n",
       "19  ASV_1643     Bt1   Bt1_clade1_bonobo    Bonobo4186256 Bt1_clade1_bonobo   \n",
       "20  ASV_1616     Bt1   Bt1_clade1_bonobo   Bonobo11821974 Bt1_clade1_bonobo   \n",
       "21  ASV_4160     Bt1   Bt1_clade1_bonobo   Bonobo11821974 Bt1_clade1_bonobo   \n",
       "22  ASV_4172     Bt1   Bt1_clade1_bonobo    Bonobo4186256 Bt1_clade1_bonobo   \n",
       "23  ASV_5947     Bt1   Bt1_clade1_bonobo   Bonobo11821974 Bt1_clade1_bonobo   \n",
       "24  ASV_1279     Bt1   Bt1_clade1_bonobo    Bonobo4186256 Bt1_clade1_bonobo   \n",
       "25  ASV_1619     Bt1   Bt1_clade1_bonobo    Bonobo3311273 Bt1_clade1_bonobo   \n",
       "26  ASV_4847     Bt1   Bt1_clade1_bonobo    Bonobo8827876 Bt1_clade1_bonobo   \n",
       "27   ASV_905     Bt1   Bt1_clade1_bonobo    Bonobo8827876 Bt1_clade1_bonobo   \n",
       "28  ASV_4859     Bt1   Bt1_clade1_bonobo    Bonobo8827876 Bt1_clade1_bonobo   \n",
       "29  ASV_1596     Bt1   Bt1_clade1_bonobo    Bonobo8827876 Bt1_clade1_bonobo   \n",
       "30  ASV_2216     Bt1   Bt1_clade1_bonobo    Bonobo8827876 Bt1_clade1_bonobo   \n",
       "31   ASV_513     Bt1   Bt1_clade1_bonobo    Bonobo3311273 Bt1_clade1_bonobo   \n",
       "32  ASV_4475     Bt1   Bt1_clade1_bonobo    Bonobo3311273 Bt1_clade1_bonobo   \n",
       "33  ASV_2163     Bt1   Bt1_clade1_bonobo    Bonobo3311273 Bt1_clade1_bonobo   \n",
       "34   ASV_598     Bt1   Bt1_clade1_bonobo   Bonobo11821974 Bt1_clade1_bonobo   \n",
       "35  ASV_4758     Bt1   Bt1_clade1_bonobo   Bonobo11821974 Bt1_clade1_bonobo   \n",
       "36  ASV_4252     Bt1   Bt1_clade1_bonobo   Bonobo11821974 Bt1_clade1_bonobo   \n",
       "37  ASV_4727     Bt1   Bt1_clade1_bonobo   Bonobo11821974 Bt1_clade1_bonobo   \n",
       "38  ASV_2133     Bt1   Bt1_clade1_bonobo    Bonobo3311273 Bt1_clade1_bonobo   \n",
       "39  ASV_1586     Bt1   Bt1_clade1_bonobo    Bonobo3311273 Bt1_clade1_bonobo   \n",
       "40  ASV_4865     Bt1   Bt1_clade1_bonobo    Bonobo3311273 Bt1_clade1_bonobo   \n",
       "\n",
       "            sseqid  pident  length  qlen         evalue  \n",
       "0   Gorilla3748318   100.0     250   250  6.220000e-133  \n",
       "1   Gorilla8497213   100.0     250   250  6.220000e-133  \n",
       "2   Gorilla8497213    99.6     250   250  2.890000e-131  \n",
       "3   Gorilla8497213    99.6     250   250  2.890000e-131  \n",
       "4   Gorilla9805772   100.0     250   250  6.220000e-133  \n",
       "5   Gorilla9805772   100.0     249   250  2.240000e-132  \n",
       "6   Gorilla9805772    99.6     250   250  2.890000e-131  \n",
       "7   Gorilla9805772    99.6     250   250  2.890000e-131  \n",
       "8   Gorilla9805772    99.2     250   250  1.350000e-129  \n",
       "9   Gorilla9805772    99.6     250   250  2.890000e-131  \n",
       "10    Chimp5888147    98.4     250   250  2.910000e-126  \n",
       "11    Chimp5888147    99.2     250   250  1.350000e-129  \n",
       "12    Chimp6685161    98.8     250   250  6.260000e-128  \n",
       "13    Chimp6685161    98.4     250   250  2.910000e-126  \n",
       "14    Chimp6685161   100.0     250   250  6.220000e-133  \n",
       "15    Chimp5888147   100.0     250   250  6.220000e-133  \n",
       "16    Chimp8740623   100.0     250   250  6.220000e-133  \n",
       "17    Chimp6685161    98.4     250   250  2.910000e-126  \n",
       "18   Bonobo4186256    99.2     250   250  1.350000e-129  \n",
       "19   Bonobo4186256    99.6     250   250  2.890000e-131  \n",
       "20  Bonobo11821974    99.6     250   250  2.890000e-131  \n",
       "21  Bonobo11821974    99.6     250   250  2.890000e-131  \n",
       "22   Bonobo4186256    99.6     250   250  2.890000e-131  \n",
       "23  Bonobo11821974    98.0     250   250  1.350000e-124  \n",
       "24   Bonobo4186256   100.0     250   250  6.220000e-133  \n",
       "25   Bonobo3311273    99.6     250   250  2.890000e-131  \n",
       "26   Bonobo8827876    99.6     250   250  2.890000e-131  \n",
       "27   Bonobo8827876   100.0     250   250  6.220000e-133  \n",
       "28   Bonobo8827876    99.6     250   250  2.890000e-131  \n",
       "29   Bonobo8827876    99.6     250   250  2.890000e-131  \n",
       "30   Bonobo8827876    99.2     250   250  1.350000e-129  \n",
       "31   Bonobo3311273   100.0     250   250  6.220000e-133  \n",
       "32   Bonobo3311273    99.6     250   250  2.890000e-131  \n",
       "33   Bonobo3311273    99.6     250   250  2.890000e-131  \n",
       "34  Bonobo11821974   100.0     250   250  6.220000e-133  \n",
       "35  Bonobo11821974    99.6     250   250  2.890000e-131  \n",
       "36  Bonobo11821974    99.6     250   250  2.890000e-131  \n",
       "37  Bonobo11821974    99.2     250   250  1.350000e-129  \n",
       "38   Bonobo3311273    99.6     250   250  2.890000e-131  \n",
       "39   Bonobo3311273    99.2     250   250  1.350000e-129  \n",
       "40   Bonobo3311273    98.4     250   250  2.910000e-126  "
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#generates three dictionaries where keys are ASVs, and values are metadata\n",
    "#all the samples with a given ASV\n",
    "#all the sample types with a given ASV per metadata info\n",
    "#taxonomic info, family and genus\n",
    "\n",
    "metadata = pd.read_csv(metadata_file,sep='\\t',index_col=None)\n",
    "sample_type_dict = dict(zip(metadata['X.SampleID'], metadata['Description']))\n",
    "\n",
    "tax_table = pd.read_csv(tax_table_file,sep='\\t',index_col=0)\n",
    "tax_table['FamilyGenus'] = tax_table['Family'] + tax_table['Genus']\n",
    "ASV_taxonomy_dict = dict(zip(tax_table.index, tax_table['FamilyGenus']))\n",
    "print(ASV_taxonomy_dict[\"ASV_1\"])\n",
    "\n",
    "ASV_sampleName_dict = {}  \n",
    "asv_table = pd.read_csv(asv_table_file,sep='\\t',index_col=0)\n",
    "for ASV,row in asv_table.iterrows():\n",
    "    sampleNames = list(asv_table.columns[row>0])\n",
    "    ASV_sampleName_dict[ASV] = sampleNames"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "from pandas.core.common import flatten\n",
    "\n",
    "def is_HR(sampleNames):\n",
    "    sampleTypes = [sample_type_dict[name] for name in sampleNames]\n",
    "    sampleTypes = [x.replace('non_western_','').replace('western_','') for x in sampleTypes]\n",
    "    neutral_sampleTypes = ['captive_gorilla','captive_bonobo','captive_chimp','captive_orangutan']\n",
    "    select_sampleTypes = [x for x in sampleTypes if x not in neutral_sampleTypes]\n",
    "    unique_sampleTypes = list(set(select_sampleTypes))\n",
    "    \n",
    "    if len(unique_sampleTypes) == 0:\n",
    "        return(unique_sampleTypes,'NA','NA')\n",
    "    if len(unique_sampleTypes)  == 1: #identifies host-restricted clades\n",
    "        HR_clade = select_sampleTypes[0]\n",
    "        HR_sample_num = len([t for t in sampleTypes if t == HR_clade])\n",
    "        return(unique_sampleTypes,unique_sampleTypes[0],HR_sample_num)\n",
    "    if len(unique_sampleTypes)  > 1:    \n",
    "        return(unique_sampleTypes,'mixed','NA')\n",
    "\n",
    "def search_clades(node, samples_cutoff, BS_support):\n",
    "    \"\"\"Finds nodes with at least 50% BS support containing ASVs only found in a single wild ape species\n",
    "    ie wild_gorilla, wild_chimp or wild_bonobo\"\"\"\n",
    "    HR_clades_passing_thresholds = []\n",
    "    counter = 1\n",
    "    for n in node.traverse():\n",
    "        if n.support > float(BS_support): #makes sure Bootstrap support is over threshold\n",
    "            ASVs = [leaf.name for leaf in n.iter_leaves() if 'ASV' in leaf.name]\n",
    "            ASVsNum = len(ASVs) \n",
    "            ASVsTax = list(set(list(flatten([ASV_taxonomy_dict[ASV] for ASV in ASVs]))))\n",
    "            sampleNames = list(set(list(flatten([ASV_sampleName_dict[ASV] for ASV in ASVs]))))\n",
    "            sampleNum = len(sampleNames)\n",
    "            sampleTypes,HR_clade, HR_sampleNum = is_HR(sampleNames)\n",
    "            if type(HR_sampleNum) == int and HR_sampleNum > samples_cutoff:\n",
    "                cladeName = 'clade_'+str(counter)\n",
    "                counter+=1\n",
    "                clade = [cladeName,HR_clade,HR_sampleNum,ASVs,ASVsNum,ASVsTax,sampleNames,sampleNum,sampleTypes]\n",
    "                HR_clades_passing_thresholds.append(clade)  \n",
    "    clades = pd.DataFrame(HR_clades_passing_thresholds, columns = ['cladeName','HR_clade','HR_sampleNum','ASV','ASVsNum','ASVsTax','sampleNames','sampleNum','sampleTypes'])\n",
    "    return(clades)\n",
    "\n",
    "#initial search contains all sub clades within the largest host restricted clade\n",
    "Bt1_all_clades = search_clades(Bt1_tree,samples_cutoff=5,BS_support=.5) \n",
    "           \n",
    "def eliminate_redundant_clades(search_clades_res):\n",
    "    df = search_clades_res.sort_values('ASVsNum',ascending=False) #start with the largest clades first\n",
    "    NRclades = []\n",
    "    NR_ASVs = []\n",
    "    for index, row in df.iterrows():\n",
    "        firstASV = row['ASV'][0]    \n",
    "        if firstASV not in NR_ASVs:\n",
    "            NR_ASVs = NR_ASVs + row['ASV']\n",
    "            NRclades.append(row['cladeName']) \n",
    "            #print(row['cladeName'])\n",
    "    res = df[df['cladeName'].isin(NRclades)]   \n",
    "    return(res)\n",
    "Bt1_clades = eliminate_redundant_clades(Bt1_all_clades)\n",
    "\n",
    "def expand_clades(clades_df):\n",
    "    ASV = clades_df.apply(lambda x: pd.Series(x['ASV']),axis=1).stack().reset_index(level=1, drop=True)\n",
    "    ASV.name = 'ASV'\n",
    "    clades_ASVs_df = clades_df.drop('ASV', axis=1).join(ASV)\n",
    "    return(clades_ASVs_df)\n",
    "Bt1_clades_ASVs = expand_clades(Bt1_clades)\n",
    "Bt1_clades_ASVs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "Bt1_all_clades = search_clades(Bt1_tree,samples_cutoff=5,BS_support=.5) \n",
    "Bt1_clades = eliminate_redundant_clades(Bt1_all_clades)  \n",
    "Bt1_clades_ASVs = expand_clades(Bt1_clades)\n",
    "Bt1_clades_ASVs = Bt1_clades_ASVs.merge(Bt1_blasthits_table,on='ASV',how='left')\n",
    "Bt1_clades_ASVs.to_csv('analyses/codiv_moeller_ASVs/Bt1_HRclades_ASVs.txt',sep='\\t',index=False)\n",
    "Bt2_all_clades = search_clades(Bt2_tree,samples_cutoff=5,BS_support=.5) \n",
    "Bt2_clades = eliminate_redundant_clades(Bt2_all_clades)   \n",
    "Bt2_clades_ASVs = expand_clades(Bt2_clades)\n",
    "Bt2_clades_ASVs = Bt2_clades_ASVs.merge(Bt2_blasthits_table,on='ASV',how='left')\n",
    "Bt2_clades_ASVs.to_csv('analyses/codiv_moeller_ASVs/Bt2_HRclades_ASVs.txt',sep='\\t',index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 172,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cladeName</th>\n",
       "      <th>HR_clade</th>\n",
       "      <th>HR_sampleNum</th>\n",
       "      <th>ASVsNum</th>\n",
       "      <th>ASVsTax</th>\n",
       "      <th>sampleNames</th>\n",
       "      <th>sampleNum</th>\n",
       "      <th>sampleTypes</th>\n",
       "      <th>ASV</th>\n",
       "      <th>codiv_clade_seq</th>\n",
       "      <th>sseqid</th>\n",
       "      <th>pident</th>\n",
       "      <th>length</th>\n",
       "      <th>qlen</th>\n",
       "      <th>evalue</th>\n",
       "      <th>codiv_clade</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Empty DataFrame\n",
       "Columns: [cladeName, HR_clade, HR_sampleNum, ASVsNum, ASVsTax, sampleNames, sampleNum, sampleTypes, ASV, codiv_clade_seq, sseqid, pident, length, qlen, evalue, codiv_clade]\n",
       "Index: []"
      ]
     },
     "execution_count": 172,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Bt2_clades_ASVs[Bt2_clades_ASVs['sampleTypes'].apply(lambda x: len(x))>1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python [conda env:ete]",
   "language": "python",
   "name": "conda-env-ete-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.10"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
