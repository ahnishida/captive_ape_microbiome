#!/bin/bash

##This script demultiplexes two sequencing runs from Moeller et al. 2014
# and one sequencing run from this study

##demultiplex gor and bonobo fastq using demultiplex 1.0.1
#which matches barcodes in header
##only works on unzipped files (https://pypi.org/project/demultiplex/)
echo "demultiplexing moeller gor bon dataset"
demultiplex demux data/16s/16s_moeller_wild/metadata/moeller_metadata_gorbon_barcode_only.txt \
data/16s/16s_moeller_wild/raw_fastq/AllGorillaBonobo.fastq
rm -r results/16s/processing/16s_moeller_wild/gor_bon/demultiplexed_fastq/
mkdir -pv results/16s/processing/16s_moeller_wild/gor_bon/demultiplexed_fastq/
for f in AllGorillaBonobo*; do mv "$f" "results/16s/processing/16s_moeller_wild/gor_bon/demultiplexed_fastq/${f#'AllGorillaBonobo_'}";done
gzip results/16s/processing/16s_moeller_wild/gor_bon/demultiplexed_fastq/*

#repair.sh from bbtools, Chimp reads and barcode fastq are not matched,
#this cleans up files and removes unpaired reads
#(https://jgi.doe.gov/data-and-tools/bbtools/bb-tools-user-guide/repair-guide/)
rm -r results/16s/processing/16s_moeller_wild/chimp/filtered_fastq/
mkdir -pv results/16s/processing/16s_moeller_wild/chimp/filtered_fastq/
repair.sh \
in=data/16s/16s_moeller_wild/raw_fastq/AllChimp.fastq.gz \
in2=data/16s/16s_moeller_wild/raw_fastq/BarcodeFileForChimpSequences.fastq.gz \
out=results/16s/processing/16s_moeller_wild/chimp/filtered_fastq/AllChimp_filtered.fastq.gz \
out2=results/16s/processing/16s_moeller_wild/chimp/filtered_fastq/BarcodeFileForChimpSequences_filtered.fastq.gz \

#barcode_splitter incorporates an index fastq file to demultiplex samples
#(https://pypi.org/project/barcode-splitter/)
echo "demultiplexing moeller chimp dataset"
rm -r results/16s/processing/16s_moeller_wild/chimp/demultiplexed_fastq/
mkdir -pv results/16s/processing/16s_moeller_wild/chimp/demultiplexed_fastq/
barcode_splitter \
--bcfile data/16s/16s_moeller_wild/metadata/moeller_metadata_chimp_barcodes_only.txt \
results/16s/processing/16s_moeller_wild/chimp/filtered_fastq/AllChimp_filtered.fastq.gz \
results/16s/processing/16s_moeller_wild/chimp/filtered_fastq/BarcodeFileForChimpSequences_filtered.fastq.gz \
--prefix results/16s/processing/16s_moeller_wild/chimp/demultiplexed_fastq/ \
--idxread 2 --suffix .fastq --mismatches 1
#remove unmatched and multimatched fastqs generated by barcode_splitter
rm results/16s/processing/16s_moeller_wild/chimp/demultiplexed_fastq/*matched*
gzip results/16s/processing/16s_moeller_wild/chimp/demultiplexed_fastq/*

#echo "demultiplexing nishida captive dataset"
rm -r results/16s/processing/16s_nishida_captive/demultiplexed_fastq/
mkdir -pv results/16s/processing/16s_nishida_captive/demultiplexed_fastq/
barcode_splitter \
--bcfile data/16s/16s_nishida_captive/metadata/nishida_metadata_barcodes_only.txt \
data/16s/16s_nishida_captive/raw_fastq/forward.fastq.gz \
data/16s/16s_nishida_captive/raw_fastq/reverse.fastq.gz \
data/16s/16s_nishida_captive/raw_fastq/barcodes.fastq.gz \
--prefix results/16s/processing/16s_nishida_captive/demultiplexed_fastq/  \
--idxread 3 --suffix .fastq --mismatches 1
#remove unmatched and multimatched fastqs generated by barcode_splitter
rm results/16s/processing/16s_nishida_captive/demultiplexed_fastq/*matched*
gzip results/16s/processing/16s_nishida_captive/demultiplexed_fastq/*
