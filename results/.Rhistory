)
)
res %>%  mutate(multi_sp_site = ifelse(num_sp == 1 & num_site == 1,'unisp_unisite',0)
ifelse(num_sp == 1 & num_site > 1,'unisp_multsite',
ifelse(num_sp > 1 & num_site == 1,'multisp_unisite','multisp_mulitsite')))))
res %>%  mutate(multi_sp_site = ifelse(num_sp == 1 & num_site == 1,'unisp_unisite',0))
res <- t(mapply(multi_sp_site,rownames(captive_exclusive_by_sp_site)))
colnames(res) <- c('clade','num_sp','num_sp')
res <- data.frame(res)
res$num_sp <- as.numeric(res$num_sp)
res$num_site <- as.numeric(res$num_site)
res$num_site
res <- t(mapply(multi_sp_site,rownames(captive_exclusive_by_sp_site)))
colnames(res) <- c('clade','num_sp','num_site')
res <- data.frame(res)
res$num_sp <- as.numeric(res$num_sp)
res$num_site <- as.numeric(res$num_site)
res %>%  mutate(multi_sp_site = ifelse(num_sp == 1 & num_site == 1,'unisp_unisite',0))
res %>%  mutate(multi_sp_site = ifelse(num_sp == 1 & num_site == 1,'unisp_unisite',
ifelse(num_sp == 1 & num_site > 1,'unisp_multsite',
ifelse(num_sp > 1 & num_site == 1,'multisp_unisite','multisp_mulitsite'))))
res <- res %>%  mutate(multi_sp_site = ifelse(num_sp == 1 & num_site == 1,'unisp_unisite',
ifelse(num_sp == 1 & num_site > 1,'unisp_multsite',
ifelse(num_sp > 1 & num_site == 1,'multisp_unisite','multisp_mulitsite'))))
res
table(res$multi_sp_site)
captive_exclusive_by_sp_site
colnames(captive_exclusive_by_sp_site) %>% str_subset(pattern = "captive")
captive_exclusive_by_sp_site <- captive_exclusive_by_sp_site %>%
column_to_rownames(var = 'clade') %>%
select(captive_categories)
# Define observed species site-restricted clades
Bacteroidales_captive_physeq.B <- transform_sample_counts(Bacteroidales_captive_physeq, function(OTU) ifelse(OTU>0,1,0))
Bacteroidales_captive_physeq.D <- merge_samples(Bacteroidales_captive_physeq.B , group='sp_site')
#given a matrix of clades vs. host species, returns a vector of host-restricted clades
Bacteroidales_captive_physeq.M <- as.matrix(otu_table(Bacteroidales_captive_physeq.D))
captive_exclusive_by_sp_site  <- t(Bacteroidales_captive_physeq.M ) %>% as.data.frame() %>% rownames_to_column(var='clade')
write.table(captive_exclusive_by_sp_site,file=paste0(outdir,'Bacteroidales_captive_by_sp_site.txt'),sep='\t',row.names=FALSE,quote=FALSE)
captive_exclusive_by_sp_site
#add taxonomy
tax_table(Bacteroidales_captive_physeq.D)
write.table(tax_table(Bacteroidales_captive_physeq.D),file=paste0(outdir,'Bacteroidales_captive__by_sp_site_tax.txt'),sep='\t',row.names=FALSE,quote=FALSE)
captive_categories <- colnames(captive_exclusive_by_sp_site) %>% str_subset(pattern = "captive")
captive_exclusive_by_sp_site <- captive_exclusive_by_sp_site %>%
column_to_rownames(var = 'clade') %>%
select(captive_categories)
captive_exclusive_by_sp_site
multi_sp_site <- function(clade) {
sampletypes <- colnames(captive_exclusive_by_sp_site)[captive_exclusive_by_sp_site[clade,]>0]
df <- data.frame(captive_sampletypes)
df <- df %>% separate(captive_sampletypes,c("sampletype", "sp","site"),'_')
num_sp <- length(unique(df$sp))
num_site <- length(unique(df$site))
res <- c(clade,num_sp,num_site)
return(res)
}
res <- t(mapply(multi_sp_site,rownames(captive_exclusive_by_sp_site)))
colnames(res) <- c('clade','num_sp','num_site')
res <- data.frame(res)
res$num_sp <- as.numeric(res$num_sp)
res$num_site <- as.numeric(res$num_site)
res <- res %>%  mutate(multi_sp_site = ifelse(num_sp == 1 & num_site == 1,'unisp_unisite',
ifelse(num_sp == 1 & num_site > 1,'unisp_multsite',
ifelse(num_sp > 1 & num_site == 1,'multisp_unisite','multisp_mulitsite'))))
captive_exclusive_by_sp_site
res
multi_sp_site <- function(clade) {
sampletypes <- colnames(captive_exclusive_by_sp_site)[captive_exclusive_by_sp_site[clade,]>0]
captive_sampletypes <- sampletypes %>% str_subset(pattern = "captive")
df <- data.frame(captive_sampletypes)
df <- df %>% separate(captive_sampletypes,c("sampletype", "sp","site"),'_')
num_sp <- length(unique(df$sp))
num_site <- length(unique(df$site))
res <- c(clade,num_sp,num_site)
return(res)
}
rownames(captive_exclusive_by_sp_site)
multi_sp_site("ASV_765")
res <- t(mapply(multi_sp_site,rownames(captive_exclusive_by_sp_site)))
colnames(res) <- c('clade','num_sp','num_site')
res <- data.frame(res)
res$num_sp <- as.numeric(res$num_sp)
res$num_site <- as.numeric(res$num_site)
res <- res %>%  mutate(multi_sp_site = ifelse(num_sp == 1 & num_site == 1,'unisp_unisite',
ifelse(num_sp == 1 & num_site > 1,'unisp_multsite',
ifelse(num_sp > 1 & num_site == 1,'multisp_unisite','multisp_mulitsite'))))
res
multi_sp_site_apply(df) {
res <- t(mapply(multi_sp_site,rownames(df)))
colnames(res) <- c('clade','num_sp','num_site')
res <- data.frame(res)
res$num_sp <- as.numeric(res$num_sp)
res$num_site <- as.numeric(res$num_site)
res <- res %>%  mutate(multi_sp_site = ifelse(num_sp == 1 & num_site == 1,'unisp_unisite',
ifelse(num_sp == 1 & num_site > 1,'unisp_multsite',
ifelse(num_sp > 1 & num_site == 1,'multisp_unisite','multisp_mulitsite'))))
}
multi_sp_site_apply(captive_exclusive_by_sp_site)
multi_sp_site_apply(df) {
res <- t(mapply(multi_sp_site,rownames(df)))
colnames(res) <- c('clade','num_sp','num_site')
res <- data.frame(res)
res$num_sp <- as.numeric(res$num_sp)
res$num_site <- as.numeric(res$num_site)
res <- res %>%  mutate(multi_sp_site = ifelse(num_sp == 1 & num_site == 1,'unisp_unisite',
ifelse(num_sp == 1 & num_site > 1,'unisp_multsite',
ifelse(num_sp > 1 & num_site == 1,'multisp_unisite','multisp_mulitsite'))))
return(res)
}
multi_sp_site_apply(captive_exclusive_by_sp_site)
multi_sp_site_apply<- function(df) {
res <- t(mapply(multi_sp_site,rownames(df)))
colnames(res) <- c('clade','num_sp','num_site')
res <- data.frame(res)
res$num_sp <- as.numeric(res$num_sp)
res$num_site <- as.numeric(res$num_site)
res <- res %>%  mutate(multi_sp_site = ifelse(num_sp == 1 & num_site == 1,'unisp_unisite',
ifelse(num_sp == 1 & num_site > 1,'unisp_multsite',
ifelse(num_sp > 1 & num_site == 1,'multisp_unisite','multisp_mulitsite'))))
return(res)
}
multi_sp_site_apply(captive_exclusive_by_sp_site)
#permutation time
captive_exclusive_by_sp_site
iterations <- 10
permatful_res <- permatfull(captive_exclusive_by_sp_site,fixedmar = "both", shuffle = "both",times=iterations)
multi_sp_site_apply(permatful_res$perm[1])
permatful_res <- permatfull(captive_exclusive_by_sp_site,fixedmar = "both", shuffle = "both",times=iterations)
multi_sp_site_apply(permatful_res$perm[1])
multi_sp_site_apply(data.frame(permatful_res$perm[1]))
test_perm <- multi_sp_site_apply(data.frame(permatful_res$perm[1]))
table(test_perm$multi_sp_site)
captive_exclusive_by_sp_site[1,]
row <- captive_exclusive_by_sp_site[1,]
sampletypes <- colnames(row)[row>0]
sampletypes
row <- captive_exclusive_by_sp_site[1,]
row <- colnames(row)[row>0]
row <- data.frame(row) %>%
separate(captive_sampletypes,c("sampletype", "sp","site"),'_') %>%
as.numeric(sp)
row <- captive_exclusive_by_sp_site[1,]
row <- colnames(row)[row>0]
row <- data.frame(row) %>%
separate(captive_sampletypes,c("sampletype", "sp","site"),'_') %>%
mutate_each_(funs(as.numeric), sp)
df <- data.frame(row) %>%
df %>%
separate(captive_sampletypes,c("sampletype", "sp","site"),'_') %>%
mutate_each_(funs(as.numeric), sp)
df <- data.frame(row) %>%
df %>%
separate(captive_sampletypes,c("sampletype", "sp","site"),'_') %>%
mutate_each_(funs(as.numeric), sp)
num_sp <- length(unique(df$sp))
df <- data.frame(row) %>%
df %>%
separate(captive_sampletypes,c("sampletype", "sp","site"),'_') %>%
mutate_at("sp", as.numeric)
df <- data.frame(row) %>%
df %>%
separate(captive_sampletypes,c("sampletype", "sp","site"),'_',convert=TRUE)
df <- data.frame(row)
df %>% separate(captive_sampletypes,c("sampletype", "sp","site"),'_',convert=TRUE)
df %>% separate(captive_sampletypes,c("sampletype", "sp","site"),'_')
df
df %>% separate(row,c("sampletype", "sp","site"),'_')
row <- captive_exclusive_by_sp_site[1,]
row <- colnames(row)[row>0]
df <- data.frame(row) %>% separate(row,c("sampletype", "sp","site"),'_')
num_sp <- int(length(unique(df$sp)))
num_sp <- as.numeric(length(unique(df$sp)))
num_sp <- as.numeric(length(unique(df$sp)))
num_site <- as.numeric(length(unique(df$site)))
res <- c(clade,num_sp,num_site)
res
captive_exclusive_by_sp_site
mapply(multi_sp_site,captive_exclusive_by_sp_site)
multi_sp_site <- function(row) {
row <- colnames(row)[row>0]
df <- data.frame(row) %>% separate(row,c("sampletype", "sp","site"),'_')
num_sp <- as.numeric(length(unique(df$sp)))
num_site <- as.numeric(length(unique(df$site)))
res <- c(clade,num_sp,num_site)
return(res)
}
mapply(multi_sp_site,captive_exclusive_by_sp_site)
apply(multi_sp_site,captive_exclusive_by_sp_site)
apply(multi_sp_site,captive_exclusive_by_sp_site)
apply(captive_exclusive_by_sp_site,multi_sp_site)
multi_sp_site <- function(row) {
row <- colnames(row)[row>0]
df <- data.frame(row) %>% separate(row,c("sampletype", "sp","site"),'_')
num_sp <- as.numeric(length(unique(df$sp)))
num_site <- as.numeric(length(unique(df$site)))
res <- c(clade,num_sp,num_site)
return(res)
}
apply(captive_exclusive_by_sp_site,multi_sp_site)
apply(captive_exclusive_by_sp_site,1,multi_sp_site)
apply(captive_exclusive_by_sp_site,2,multi_sp_site)
res = data.frame()
for (i in 1:5){
res[i]=c(4,5)
}
output = matrix(ncol=2, nrow=iterations)
for (i in 1:5){
output [i]=c(4,5)
}
output = matrix(ncol=2, nrow=iterations)
for (i in 1:iterations){
output [i]=c(4,5)
}
output
output = matrix(ncol=2, nrow=iterations)
for (i in 1:iterations){
output[,i]=c(4,5)
}
output
output = matrix(ncol=2, nrow=iterations)
for (i in 1:iterations){
output[i,]=c(4,5)
}
output
df <- captive_exclusive_by_sp_site
output = matrix(ncol=2, nrow=iterations)
for (i in 1:iterations){
output[i,]=multi_sp_site(df)
}
output = matrix(ncol=3, nrow=iterations)
for (i in 1:iterations){
output[i,]=multi_sp_site(df)
}
output
1:5
output = matrix(ncol=3, nrow=5)
for (i in 1:5){
output[i,]=multi_sp_site(df)
}
output
output = matrix(ncol=3, nrow=5)
for (i in 1:5){
output[i,]=multi_sp_site(df)
}
output
multi_sp_site(df[,1])
captive_exclusive_by_sp_site[1,]
df <- captive_exclusive_by_sp_site
output = matrix(ncol=3, nrow=5)
for (i in 1:5){
output[i,]=multi_sp_site(df[i,])
}
output
multi_sp_site <- function(row) {
row <- colnames(row)[row>0]
df <- data.frame(row) %>% separate(row,c("sampletype", "sp","site"),'_')
num_sp <- as.numeric(length(unique(df$sp)))
num_site <- as.numeric(length(unique(df$site)))
res <- c(num_sp,num_site)
return(res)
}
1:5
df <- captive_exclusive_by_sp_site
output = matrix(ncol=2, nrow=5)
for (i in 1:5){
output[i,]=multi_sp_site(df[i,])
}
output
output = matrix(ncol=2, nrow=nrow(df))
for (i in 1:nrow(df)){
output[i,]=multi_sp_site(df[i,])
}
output
output$clade <- rownames(df)
output
output = matrix(ncol=2, nrow=nrow(df))
for (i in 1:nrow(df)){
output[i,]=multi_sp_site(df[i,])
}
rownames(output) <- rownames(df)
output
multi_sp_site <- function(row) {
row <- colnames(row)[row>0]
df <- data.frame(row) %>% separate(row,c("sampletype", "sp","site"),'_')
num_sp <- as.numeric(length(unique(df$sp)))
num_site <- as.numeric(length(unique(df$site)))
res <- c(num_sp,num_site)
names(res) <- c('num_sp','num_site')
return(res)
}
df <- captive_exclusive_by_sp_site
output = matrix(ncol=2, nrow=nrow(df))
for (i in 1:nrow(df)){
output[i,]=multi_sp_site(df[i,])
}
rownames(output) <- rownames(df)
output
loop_rows <- function(df) {
output = matrix(ncol=2, nrow=nrow(df))
for (i in 1:nrow(df)){
output[i,]=multi_sp_site(df[i,])
}
rownames(output) <- rownames(df)
colnames(output) <- c('num_sp','num_site')
return(output)
}
loop_rows(captive_exclusive_by_sp_site)
df <- captive_exclusive_by_sp_site
loop_rows <- function(df) {
output = matrix(ncol=2, nrow=nrow(df))
for (i in 1:nrow(df)){
output[i,]=multi_sp_site(df[i,])
}
output <- data.frame(output)
output$ASV <- rownames(df)
colnames(output) <- c('num_sp','num_site')
return(output)
}
loop_rows(captive_exclusive_by_sp_site)
loop_rows <- function(df) {
output = matrix(ncol=2, nrow=nrow(df))
for (i in 1:nrow(df)){
output[i,]=multi_sp_site(df[i,])
}
output <- data.frame(output)
colnames(output) <- c('num_sp','num_site')
output$ASV <- rownames(df)
return(output)
}
loop_rows(captive_exclusive_by_sp_site)
loop_rows <- function(df) {
output = matrix(ncol=2, nrow=nrow(df))
for (i in 1:nrow(df)){
output[i,]=multi_sp_site(df[i,])
}
output <- data.frame(output)
colnames(output) <- c('num_sp','num_site')
output$ASV <- rownames(df)
output <- output %>%  mutate(multi_sp_site = ifelse(num_sp == 1 & num_site == 1,'unisp_unisite',
ifelse(num_sp == 1 & num_site > 1,'unisp_multsite',
ifelse(num_sp > 1 & num_site == 1,'multisp_unisite','multisp_mulitsite'))))
return(output)
}
loop_rows(captive_exclusive_by_sp_site)
res <- loop_rows(captive_exclusive_by_sp_site)
table(res$multi_sp_site)
permatful_res <- permatfull(captive_exclusive_by_sp_site,fixedmar = "both", shuffle = "both",times=iterations)
test_perm <- loop_rows(data.frame(permatful_res$perm[1]))
table(test_perm$multi_sp_site)
test_perm <- loop_rows(data.frame(permatful_res$perm[2]))
table(test_perm$multi_sp_site)
for(i in 1:iterations){
res <- loop_rows(data.frame(permatful_res$perm[i]))
print(table(res$multi_sp_site))
}
iterations <- 100
permatful_res <- permatfull(captive_exclusive_by_sp_site,fixedmar = "both", shuffle = "both",times=iterations)
test_perm <- loop_rows(data.frame(permatful_res$perm[2]))
table(test_perm$multi_sp_site)
for(i in 1:iterations){
res <- loop_rows(data.frame(permatful_res$perm[i]))
tab <- (table(res$multi_sp_site))
}
for(i in 1:iterations){
res <- loop_rows(data.frame(permatful_res$perm[i]))
tab <- (table(res$multi_sp_site))
print(tab)
}
res <- loop_rows(captive_exclusive_by_sp_site)
table(res$multi_sp_site)
iterations <- 10
permatful_res <- permatfull(captive_exclusive_by_sp_site,fixedmar = "both", shuffle = "both",times=iterations)
test_perm <- loop_rows(data.frame(permatful_res$perm[2]))
table(test_perm$multi_sp_site)
for(i in 1:iterations){
res <- loop_rows(data.frame(permatful_res$perm[i]))
sum(res$multi_sp_site == 'multisp_mulitsite')
}
for(i in 1:iterations){
res <- loop_rows(data.frame(permatful_res$perm[i]))
val <- sum(res$multi_sp_site == 'multisp_mulitsite')
print(val)
}
for(i in 1:iterations){
res <- loop_rows(data.frame(permatful_res$perm[i]))
val <- sum(res$multi_sp_site == 'multisp_mulitsite')
val <- ifelse(val >= 6,1,0)
return(val)
}
res <- c()
for(i in 1:iterations){
res <- loop_rows(data.frame(permatful_res$perm[i]))
val <- sum(res$multi_sp_site == 'multisp_mulitsite')
val <- ifelse(val >= 6,1,0)
res <- c(res,val)
}
print(res)
res <- c()
for(i in 1:iterations){
res <- loop_rows(data.frame(permatful_res$perm[i]))
val <- sum(res$multi_sp_site == 'multisp_mulitsite')
val <- ifelse(val >= 6,1,0)
print(val)
#res <- c(res,val)
}
res <- c()
for(i in 1:iterations){
res <- loop_rows(data.frame(permatful_res$perm[i]))
val <- sum(res$multi_sp_site == 'multisp_mulitsite')
val <- ifelse(val >= 6,1,0)
print(val)
res <- c(res,val)
}
print(res)
output_perm <- c()
for(i in 1:iterations){
res <- loop_rows(data.frame(permatful_res$perm[i]))
val <- sum(res$multi_sp_site == 'multisp_mulitsite')
val <- ifelse(val >= 6,1,0)
print(val)
output_perm <- c(output_perm,val)
}
output_perm
table(test_perm$multi_sp_site)
output_perm <- c()
for(i in 1:iterations){
res <- loop_rows(data.frame(permatful_res$perm[i]))
val <- sum(res$multi_sp_site == 'multisp_unisite')
val <- ifelse(val >= 6,1,0)
print(val)
output_perm <- c(output_perm,val)
}
sum(output_perm)/iterations
iterations <- 10000
permatful_res <- permatfull(captive_exclusive_by_sp_site,fixedmar = "both", shuffle = "both",times=iterations)
test_perm <- loop_rows(data.frame(permatful_res$perm[2]))
table(test_perm$multi_sp_site)
output_perm <- c()
for(i in 1:iterations){
res <- loop_rows(data.frame(permatful_res$perm[i]))
val <- sum(res$multi_sp_site == 'multisp_unisite')
val <- ifelse(val >= 6,1,0)
print(val)
output_perm <- c(output_perm,val)
}
sum(output_perm)/iterations
#Examining the role of geography versus host species among captive apes
Bacteroidales_captive <- Bacteroidales_HR_ASVs %>% filter(captive_chimp+captive_bonobo+captive_gorilla+captive_orangutan > 0)
Bacteroidales_captive_physeq <- prune_taxa(Bacteroidales_captive$clade, Bacteroidales_16S)
Bacteroidales_captive_physeq <- prune_samples(sample_sums(Bacteroidales_captive_physeq)>0, Bacteroidales_captive_physeq)
Bacteroidales_captive_physeq
#modify sample data to include a new column: sp_site
sample_data(Bacteroidales_captive_physeq)
sample_data_update = sample_data(Bacteroidales_captive_physeq)
sample_data_update$SampleID <- rownames(sample_data_update)
sample_data_update = mutate(sample_data_update,
sp_site = paste(Description, site_code, sep = '_')) %>%
column_to_rownames('SampleID')
sample_data(Bacteroidales_captive_physeq) <- sample_data(sample_data_update)
# Define observed species site-restricted clades
Bacteroidales_captive_physeq.B <- transform_sample_counts(Bacteroidales_captive_physeq, function(OTU) ifelse(OTU>0,1,0))
Bacteroidales_captive_physeq.D <- merge_samples(Bacteroidales_captive_physeq.B , group='sp_site')
#given a matrix of clades vs. host species, returns a vector of host-restricted clades
Bacteroidales_captive_physeq.M <- as.matrix(otu_table(Bacteroidales_captive_physeq.D))
captive_exclusive_by_sp_site  <- t(Bacteroidales_captive_physeq.M ) %>% as.data.frame() %>% rownames_to_column(var='clade')
write.table(captive_exclusive_by_sp_site,file=paste0(outdir,'Bacteroidales_captive_by_sp_site.txt'),sep='\t',row.names=FALSE,quote=FALSE)
captive_exclusive_by_sp_site
#add taxonomy
tax_table(Bacteroidales_captive_physeq.D)
write.table(tax_table(Bacteroidales_captive_physeq.D),file=paste0(outdir,'Bacteroidales_captive__by_sp_site_tax.txt'),sep='\t',row.names=FALSE,quote=FALSE)
#simply to just captive sample types
captive_categories <- colnames(captive_exclusive_by_sp_site) %>% str_subset(pattern = "captive")
captive_exclusive_by_sp_site <- captive_exclusive_by_sp_site %>%
column_to_rownames(var = 'clade') %>%
select(captive_categories)
multi_sp_site <- function(row) {
row <- colnames(row)[row>0]
df <- data.frame(row) %>% separate(row,c("sampletype", "sp","site"),'_')
num_sp <- as.numeric(length(unique(df$sp)))
num_site <- as.numeric(length(unique(df$site)))
res <- c(num_sp,num_site)
return(res)
}
df <- captive_exclusive_by_sp_site
loop_rows <- function(df) {
output = matrix(ncol=2, nrow=nrow(df))
for (i in 1:nrow(df)){
output[i,]=multi_sp_site(df[i,])
}
output <- data.frame(output)
colnames(output) <- c('num_sp','num_site')
output$ASV <- rownames(df)
output <- output %>%  mutate(multi_sp_site = ifelse(num_sp == 1 & num_site == 1,'unisp_unisite',
ifelse(num_sp == 1 & num_site > 1,'unisp_multsite',
ifelse(num_sp > 1 & num_site == 1,'multisp_unisite','multisp_mulitsite'))))
return(output)
}
res <- loop_rows(captive_exclusive_by_sp_site)
table(res$multi_sp_site)
#permutation time
captive_exclusive_by_sp_site
iterations <- 1000
permatful_res <- permatfull(captive_exclusive_by_sp_site,fixedmar = "both", shuffle = "both",times=iterations)
test_perm <- loop_rows(data.frame(permatful_res$perm[2]))
table(test_perm$multi_sp_site)
output_perm <- c()
for(i in 1:iterations){
res <- loop_rows(data.frame(permatful_res$perm[i]))
val <- sum(res$multi_sp_site == 'multisp_unisite')
val <- ifelse(val >= 6,1,0)
output_perm <- c(output_perm,val)
}
